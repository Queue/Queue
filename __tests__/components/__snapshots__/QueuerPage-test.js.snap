// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "padding": 13,
      "width": "100%",
    }
  }
>
  <RCTScrollView
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutoAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    keyboardDismissMode="interactive"
    onScroll={[Function]}
    scrollEventThrottle={0}
    showsVerticalScrollIndicator={true}
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "fontFamily": "Open Sans",
            "fontSize": 55,
            "fontWeight": "100",
            "letterSpacing": 2,
          }
        }
      >
        &lt;Name&gt;
      </Text>
      <View
        style={
          Object {
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#eaeaea",
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "grey",
                "fontFamily": "Open Sans",
                "letterSpacing": 1,
                "marginBottom": 2,
              }
            }
          >
            Name
          </Text>
          <TextInput
            label="Name"
            onChangeText={undefined}
            style={
              Object {
                "fontFamily": "Open Sans",
                "height": 40,
                "paddingLeft": 15,
              }
            }
            type="text"
            value={undefined}
          />
        </View>
        <View
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#eaeaea",
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "grey",
                "fontFamily": "Open Sans",
                "letterSpacing": 1,
                "marginBottom": 2,
              }
            }
          >
            Party Size
          </Text>
          <TextInput
            label="Party Size"
            onChangeText={undefined}
            style={
              Object {
                "fontFamily": "Open Sans",
                "height": 40,
                "paddingLeft": 15,
              }
            }
            type="text"
            value={undefined}
          />
        </View>
        <View
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#eaeaea",
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "grey",
                "fontFamily": "Open Sans",
                "letterSpacing": 1,
                "marginBottom": 2,
              }
            }
          >
            Phone Number
          </Text>
          <TextInput
            keyboardType="phone-pad"
            label="Phone Number"
            onChangeText={undefined}
            placeholder="Phone Number"
            style={
              Array [
                Object {
                  "fontFamily": "Open Sans",
                  "height": 40,
                  "paddingLeft": 15,
                },
                undefined,
              ]
            }
            type="number"
            value={undefined}
          />
        </View>
        <View
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#eaeaea",
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "grey",
                "fontFamily": "Open Sans",
                "letterSpacing": 1,
                "marginBottom": 2,
              }
            }
          >
            Notes
          </Text>
          <TextInput
            label="Notes"
            multiline={true}
            numberOfLines={4}
            onChangeText={undefined}
            placeholder="Notes"
            style={
              Array [
                Object {
                  "borderColor": "#eaeaea",
                  "borderLeftWidth": 1,
                  "fontFamily": "Open Sans",
                  "fontSize": 17,
                  "height": 170,
                  "paddingLeft": 15,
                  "paddingTop": 7,
                },
                undefined,
              ]
            }
            type="textarea"
            value={undefined}
          />
        </View>
      </View>
      <View
        style={
          Object {
            "marginTop": 25,
          }
        }
      >
        <View
          style={
            Array [
              undefined,
              Object {
                "alignContent": undefined,
                "alignItems": "flex-start",
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": undefined,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                  "marginLeft": 0,
                  "marginRight": 0,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityComponentType="button"
                accessibilityLabel={undefined}
                accessibilityTraits="button"
                accessible={true}
                collapsable={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "borderColor": "#8FD6D6",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "marginBottom": 5,
                    "marginLeft": 5,
                    "marginRight": 5,
                    "marginTop": 5,
                    "opacity": 1,
                    "overflow": "hidden",
                    "padding": 8,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007aff",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "center",
                      },
                      null,
                      Array [
                        Object {
                          "fontFamily": "Open Sans",
                          "fontWeight": "500",
                        },
                        Object {
                          "color": "#8FD6D6",
                          "fontSize": 20,
                        },
                      ],
                      null,
                    ]
                  }
                >
                  Text
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              undefined,
              Object {
                "alignContent": undefined,
                "alignItems": "flex-start",
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": undefined,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                  "marginLeft": 0,
                  "marginRight": 0,
                  "width": "50%",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityComponentType="button"
                accessibilityLabel={undefined}
                accessibilityTraits="button"
                accessible={true}
                collapsable={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "borderColor": "#6CDA6C",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "marginBottom": 5,
                    "marginLeft": 5,
                    "marginRight": 5,
                    "marginTop": 5,
                    "opacity": 1,
                    "overflow": "hidden",
                    "padding": 8,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007aff",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "center",
                      },
                      null,
                      Array [
                        Object {
                          "fontFamily": "Open Sans",
                          "fontWeight": "500",
                        },
                        Object {
                          "color": "#6CDA6C",
                          "fontSize": 20,
                        },
                      ],
                      null,
                    ]
                  }
                >
                  Seat
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                  "marginLeft": 0,
                  "marginRight": 0,
                  "width": "50%",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "width": "100%",
                }
              }
            >
              <View
                accessibilityComponentType="button"
                accessibilityLabel={undefined}
                accessibilityTraits="button"
                accessible={true}
                collapsable={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "borderColor": "#FB5A5A",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "marginBottom": 5,
                    "marginLeft": 5,
                    "marginRight": 5,
                    "marginTop": 5,
                    "opacity": 1,
                    "overflow": "hidden",
                    "padding": 8,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#007aff",
                        "fontSize": 17,
                        "fontWeight": "500",
                        "textAlign": "center",
                      },
                      null,
                      Array [
                        Object {
                          "fontFamily": "Open Sans",
                          "fontWeight": "500",
                        },
                        Object {
                          "color": "#FB5A5A",
                          "fontSize": 20,
                        },
                      ],
                      null,
                    ]
                  }
                >
                  Remove
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
