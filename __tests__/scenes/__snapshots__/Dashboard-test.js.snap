exports[`test renders correctly 1`] = `
<View
  style={
    Array [
      undefined,
      Object {
        "alignContent": undefined,
        "alignItems": "flex-start",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "height": "100%",
        "justifyContent": "flex-start",
      },
    ]
  }>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    supportedOrientations={
      Array [
        "landscape",
        "portrait",
      ]
    }
    transparent={true}
    visible={true}>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.25)",
          },
        ]
      }>
      <View
        style={
          Object {
            "alignItems": "center",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }>
        <ActivityIndicator
          animating={true}
          color="white"
          hidesWhenStopped={true}
          size="large"
          style={
            Object {
              "flex": 1,
            }
          } />
        <View
          style={
            Object {
              "alignItems": "center",
              "bottom": 0,
              "flex": 1,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "height": 50,
                  "top": 80,
                },
                undefined,
              ]
            }>
            
          </Text>
        </View>
      </View>
    </View>
  </Modal>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "borderColor": "#eaeaea",
          "borderRightWidth": 1,
          "justifyContent": "center",
          "paddingLeft": 0,
          "paddingRight": 0,
          "width": "100%",
        },
        Object {
          "alignItems": "flex-start",
          "flexDirection": "column",
          "justifyContent": "flex-start",
          "marginLeft": 0,
          "marginRight": 0,
          "width": "100%",
        },
      ]
    }>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": "100%",
            "marginTop": 21,
            "padding": 15,
            "width": "100%",
          },
          Object {
            "paddingLeft": 0,
            "paddingRight": 0,
          },
        ]
      }>
      <View
        style={
          Object {
            "marginTop": 14,
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#48C948",
                  "fontSize": 14,
                  "letterSpacing": 1,
                  "padding": 5,
                  "paddingBottom": 15,
                  "textAlign": "center",
                },
                Object {
                  "color": "#48C948",
                  "fontFamily": "Josefin Sans",
                  "fontSize": 70,
                },
              ]
            }>
            Q
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "flex-end",
          "marginTop": -21,
          "width": "100%",
        }
      }>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": 110,
            "width": "100%",
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "width": "100%",
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <View
            style={
              Object {
                "backgroundColor": "#eaeaea",
                "height": 110,
              }
            }>
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 30,
                  },
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "gray",
                      "fontSize": 30,
                      "marginTop": 30,
                      "textAlign": "center",
                      "width": "100%",
                    },
                    Object {
                      "color": "#48C948",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }>
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "gray",
                    "fontFamily": "Open Sans",
                    "fontSize": 10,
                    "fontWeight": "600",
                    "letterSpacing": 1,
                    "textAlign": "center",
                    "width": "100%",
                  },
                  Object {
                    "color": "#48C948",
                  },
                ]
              }>
              Home
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": 110,
            "width": "100%",
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "width": "100%",
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": 110,
              }
            }>
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 30,
                  },
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "gray",
                      "fontSize": 30,
                      "marginTop": 30,
                      "textAlign": "center",
                      "width": "100%",
                    },
                    Object {
                      "color": "grey",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }>
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "gray",
                    "fontFamily": "Open Sans",
                    "fontSize": 10,
                    "fontWeight": "600",
                    "letterSpacing": 1,
                    "textAlign": "center",
                    "width": "100%",
                  },
                  Object {
                    "color": "grey",
                  },
                ]
              }>
              History
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": 110,
            "width": "100%",
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "width": "100%",
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": 110,
              }
            }>
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 30,
                  },
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "gray",
                      "fontSize": 30,
                      "marginTop": 30,
                      "textAlign": "center",
                      "width": "100%",
                    },
                    Object {
                      "color": "grey",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }>
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "gray",
                    "fontFamily": "Open Sans",
                    "fontSize": 10,
                    "fontWeight": "600",
                    "letterSpacing": 1,
                    "textAlign": "center",
                    "width": "100%",
                  },
                  Object {
                    "color": "grey",
                  },
                ]
              }>
              Settings
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": 110,
            "width": "100%",
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "width": "100%",
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": 110,
              }
            }>
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 30,
                  },
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "gray",
                      "fontSize": 30,
                      "marginTop": 30,
                      "textAlign": "center",
                      "width": "100%",
                    },
                    Object {
                      "color": "grey",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }>
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "gray",
                    "fontFamily": "Open Sans",
                    "fontSize": 10,
                    "fontWeight": "600",
                    "letterSpacing": 1,
                    "textAlign": "center",
                    "width": "100%",
                  },
                  Object {
                    "color": "grey",
                  },
                ]
              }>
              Logout
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "borderColor": "#eaeaea",
          "borderRightWidth": 1,
          "width": "100%",
        },
        Object {
          "alignItems": "flex-start",
          "flexDirection": "column",
          "justifyContent": "flex-start",
          "marginLeft": 0,
          "marginRight": 0,
          "width": "100%",
        },
      ]
    }>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": "100%",
            "marginTop": 21,
            "padding": 15,
            "width": "100%",
          },
          Object {
            "height": "100%",
          },
        ]
      }>
      <View
        style={
          Object {
            "padding": 13,
            "width": "100%",
          }
        }>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
              "marginTop": 250,
              "width": "100%",
            }
          }>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#eaeaea",
                "fontSize": 30,
              }
            }>
            Select a person in queue to edit their values.
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "width": "100%",
        },
        Object {
          "alignItems": "flex-start",
          "flexDirection": "column",
          "justifyContent": "flex-start",
          "marginLeft": 0,
          "marginRight": 0,
          "width": "100%",
        },
      ]
    }>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#eaeaea",
            "borderTopColor": "#eaeaea",
            "borderTopWidth": 1,
            "height": "100%",
            "marginTop": 21,
            "width": "100%",
            "zIndex": 99,
          },
          Object {
            "flex": 1,
          },
        ]
      }>
      <RCTScrollView
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onViewableItemsChanged={undefined}
        renderItem={[Function]}
        renderScrollComponent={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        windowSize={21}>
        <View />
      </RCTScrollView>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "backgroundColor": "#48C948",
            "height": 60,
            "width": "100%",
            "zIndex": 999,
          },
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}>
      <Text
        accessible={true}
        allowFontScaling={false}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "white",
              "fontSize": 60,
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }>
        
      </Text>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,.8)",
            "flex": 1,
            "justifyContent": "center",
            "width": "100%",
          },
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}>
      <View
        style={
          Object {
            "width": 300,
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontFamily": "Open Sans",
              "fontSize": 25,
              "marginBottom": 10,
            }
          }>
          Name
        </Text>
        <TextInput
          autoCapitalize="words"
          autoFocus={true}
          onChangeText={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "white",
              "fontFamily": "Open Sans",
              "fontSize": 30,
              "height": 80,
              "justifyContent": "center",
              "paddingLeft": 15,
              "paddingRight": 15,
            }
          }
          value="" />
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "alignItems": "center",
                "backgroundColor": "#8FD6D6",
                "height": 60,
                "justifyContent": "center",
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "white",
                "fontSize": 30,
              }
            }>
            →
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
              },
              Object {
                "height": 0,
              },
              undefined,
            ]
          } />
      </View>
    </View>
  </Modal>
</View>
`;
